{"version":3,"sources":["components/styled.ts","store/todos.ts","store/theme.ts","store/index.ts","components/templates/centered/styled.ts","components/templates/centered/index.tsx","components/atoms/form/styled.ts","components/atoms/form/index.tsx","components/atoms/iconButton/styled.ts","components/atoms/iconButton/index.tsx","components/atoms/item/styled.ts","components/atoms/item/index.tsx","components/molecules/list/styled.ts","components/molecules/list/index.tsx","components/templates/columns/styled.ts","components/templates/columns/index.tsx","components/molecules/card/styled.ts","components/molecules/card/index.tsx","components/atoms/date/styled.ts","components/atoms/date/index.tsx","components/organisms/taskList/styled.ts","components/organisms/taskList/index.tsx","components/pages/home/styled.ts","components/pages/home/index.tsx","components/index.tsx","index.tsx"],"names":["Global","createGlobalStyle","themes","light","title","colors","primary","secondary","info","text","default","success","warning","danger","dark","grey","shadow","basic","hover","createActions","addTodo","toggleTodo","removeTodo","Types","Creators","INITIAL_STATE","createReducer","ADD_TODO","state","payload","id","Math","random","complete","TOGGLE_TODO","map","todo","REMOVE_TODO","filter","toogleTheme","TOOGLE_THEME","reducers","combineReducers","todos","theme","settings","key","storage","redulcer","persistReducer","store","createStore","persistor","persistStore","Wrapper","styled","div","Centered","children","form","Span","span","shade","tint","Text","input","Label","label","formRef","React","createRef","Form","useState","content","setContent","dispatcher","useDispatch","ref","onSubmit","event","preventDefault","onChange","target","value","maxLength","pattern","type","required","Tooltip","Btn","button","color","IconButon","icon","onClick","helper","li","CheckIcon","TiMediaStopOutline","UncheckIcon","TiInputCheckedOutline","Button","p","props","status","callback","Item","Icon","task","size","Ul","ul","List","items","hasItems","Boolean","length","item","Columns","Header","Title","h1","Content","Action","Footer","Card","header","action","footer","Moment","formatter","Intl","DateTimeFormat","weekday","day","month","year","now","Date","data","format","charAt","toUpperCase","slice","Plus","GoPlus","attrs","TaskList","useSelector","Event","current","dispatchEvent","Fab","Light","FaLightbulb","Home","App","change","element","StrictMode","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42873a88.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const Global = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  font-family: 'Roboto', sans-serif;\n}\n`;\n\ninterface Shadow {\n  basic: string;\n  hover: string;\n}\n\ninterface Text {\n  default: string;\n  title: string;\n}\n\ninterface Colors {\n  primary: string;\n  secondary: string;\n  info: string;\n  text: Text;\n  success: string;\n  warning: string;\n  danger: string;\n  light: string;\n  dark: string;\n  grey: string;\n}\n\nexport interface Theme {\n  title: string;\n  colors: Colors;\n  shadow: Shadow;\n}\n\nconst light = {\n  title: 'light',\n  colors: {\n    primary: '#ae5cd1',\n    secondary: '#fafafa',\n    info: '#3298dc',\n    text: {\n      default: '#363636',\n      title: '#ae5cd1',\n    },\n    success: '#2ecc71',\n    warning: '#ff7518',\n    danger: '#e74c3c',\n    light: '#f5f5f5',\n    dark: '#363636',\n    grey: '#dbdbdb',\n  },\n  shadow: {\n    basic:\n      '0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0,0,0,.12)',\n    hover:\n      '0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0,0,0,.12)',\n  },\n};\n\nconst dark = {\n  title: 'dark',\n  colors: {\n    primary: '#FF00FF',\n    secondary: '#303030',\n    text: {\n      default: '#f5f5f5',\n      title: '#EE82EE',\n    },\n    info: '#3298dc',\n    success: '#2ecc71',\n    warning: '#ff7518',\n    danger: '#e74c3c',\n    light: '#f5f5f5',\n    dark: '#363636',\n    grey: '#4a4a4a',\n  },\n  shadow: {\n    basic:\n      '0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0,0,0,.12)',\n    hover:\n      '0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0,0,0,.12)',\n  },\n};\n\nexport const themes = { light, dark };\n","import { createActions, createReducer } from 'reduxsauce';\n\nexport const { Types, Creators } = createActions({\n  addTodo: ['text'],\n  toggleTodo: ['id'],\n  removeTodo: ['id'],\n});\n\nexport interface Task {\n  id: number;\n  text: string;\n  complete: boolean;\n}\n\nconst INITIAL_STATE: Task[] = [];\n\nconst add = (state = INITIAL_STATE, payload: Task): Task[] => [\n  ...state,\n  { id: Math.random(), text: payload.text, complete: false },\n];\n\nconst toggle = (state = INITIAL_STATE, payload: Task) =>\n  state.map((todo) =>\n    todo.id === payload.id ? { ...todo, complete: !todo.complete } : todo\n  );\n\nconst remove = (state = INITIAL_STATE, payload: Task) =>\n  state.filter((todo) => todo.id !== payload.id);\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.ADD_TODO]: add,\n  [Types.TOGGLE_TODO]: toggle,\n  [Types.REMOVE_TODO]: remove,\n});\n","import { createActions, createReducer } from 'reduxsauce';\n\nexport const { Types, Creators } = createActions({\n  toogleTheme: [],\n});\n\nconst INITIAL_STATE: string = 'dark';\n\nconst toogleTheme = (state = INITIAL_STATE): string =>\n  state === 'dark' ? 'light' : 'dark';\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.TOOGLE_THEME]: toogleTheme,\n});\n","import { persistStore, persistReducer } from 'redux-persist';\nimport { createStore, combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport todos, { Task } from 'store/todos';\nimport theme from 'store/theme';\n\nexport interface State {\n  theme: string;\n  todos: Task[];\n}\n\nconst reducers = combineReducers({ todos, theme });\n\nconst settings = { key: 'root', storage };\n\nconst redulcer = persistReducer(settings, reducers);\n\nconst store = createStore(redulcer);\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  height: 100%;\n  width: 100%;\n`;\n","import React from 'react';\n\nimport { Wrapper } from 'components/templates/centered/styled';\n\nconst Centered: React.FC = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n\nexport default Centered;\n","import styled from 'styled-components';\nimport { tint, shade } from 'polished';\n\nexport const Wrapper = styled.form`\n  margin-bottom: 1.25rem;\n  padding: 1rem;\n`;\n\nexport const Span = styled.span`\n  color: ${({ theme }) => {\n    const callback = theme.title === 'light' ? shade : tint;\n    return callback(0.2, theme.colors.info);\n  }};\n  border-right: 0.25rem solid ${({ theme }) => theme.colors.secondary};\n  border-left: 0.25rem solid ${({ theme }) => theme.colors.secondary};\n  background-color: ${({ theme }) => theme.colors.secondary};\n  transition: 0.2s ease-in-out;\n  border-radius: 1rem;\n  width: max-content;\n  position: absolute;\n  font-weight: 300;\n  max-height: 100%;\n  cursor: text;\n  left: 0.25rem;\n  top: 0;\n`;\n\nexport const Text = styled.input`\n  border: solid 1px\n    ${({ theme }) => {\n      const callback = theme.title === 'light' ? shade : tint;\n      return callback(0.2, theme.colors.info);\n    }};\n  color: ${({ theme }) => theme.colors.text.default};\n  background-color: transparent;\n  transition: 0.2s ease-in-out;\n  padding: 0.25rem 0.5rem;\n  border-radius: 0.25rem;\n  font-weight: 300;\n  overflow: hidden;\n  line-height: 1.5;\n  font-size: 1rem;\n  outline: none;\n  width: 100%;\n\n  &:focus,\n  &:valid {\n    & + ${Span} {\n      font-size: x-small;\n      top: -0.75rem;\n    }\n  }\n`;\n\nexport const Label = styled.label`\n  position: relative;\n`;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Wrapper, Text, Label, Span } from 'components/atoms/form/styled';\nimport { Creators } from 'store/todos';\n\nexport const formRef: React.RefObject<HTMLFormElement> = React.createRef();\n\nconst Form: React.FC = () => {\n  const [content, setContent] = useState('');\n  const dispatcher = useDispatch();\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (content) {\n      dispatcher(Creators.addTodo(content));\n      setContent('');\n    }\n  };\n\n  const setter = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setContent(event.target.value);\n  };\n\n  return (\n    <Wrapper ref={formRef} onSubmit={onSubmit}>\n      <Label>\n        <Text\n          onChange={setter}\n          value={content}\n          maxLength={48}\n          pattern=\".+\"\n          type=\"text\"\n          required\n        />\n        <Span>Tarefa</Span>\n      </Label>\n    </Wrapper>\n  );\n};\n\nexport default Form;\n","import styled from 'styled-components';\nimport { tint, shade } from 'polished';\n\nimport { Theme } from 'components/styled';\n\nconst color = (theme: Theme) => {\n  const callback = theme.title === 'light' ? tint : shade;\n  return callback(0.2, theme.colors.danger);\n};\n\nexport const Tooltip = styled.span`\n  border: 1px solid ${({ theme }) => theme.colors.secondary};\n  background-color: ${({ theme }) => theme.colors.danger};\n  color: ${({ theme }) => theme.colors.secondary};\n  transform: translateY(3rem);\n  border-radius: 0.5rem;\n  padding: 0.25rem 0.5rem;\n  position: absolute;\n  font-weight: 300;\n\n  &::after {\n    border-color: transparent transparent ${({ theme }) => theme.colors.danger}\n      transparent;\n    border-style: solid;\n    position: absolute;\n    margin-left: -5px;\n    border-width: 3px;\n    content: ' ';\n    bottom: 100%;\n    left: 50%;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  display: flex;\n\n  & > ${Tooltip} {\n    transition: visibility 100ms linear, opacity 100ms linear;\n    visibility: hidden;\n    opacity: 0;\n  }\n\n  &:hover > ${Tooltip} {\n    min-width: max-content;\n    visibility: visible;\n    z-index: 100;\n    opacity: 1;\n  }\n`;\n\nexport const Btn = styled.button`\n  background-color: ${({ theme }) => theme.colors.danger};\n  box-shadow: ${({ theme }) => theme.shadow.basic};\n  justify-content: center;\n  align-items: center;\n  border-radius: 100%;\n  padding: 0.75rem;\n  display: flex;\n  outline: none;\n  border: none;\n\n  &:hover {\n    background-color: ${({ theme }) => color(theme)};\n    box-shadow: ${({ theme }) => theme.shadow.hover};\n    cursor: pointer;\n  }\n\n  &:active {\n    transform: translateY(1px);\n  }\n`;\n","import React, { ReactNode, MouseEventHandler } from 'react';\n\nimport { Btn, Wrapper, Tooltip } from 'components/atoms/iconButton/styled';\n\ninterface Props {\n  onClick: MouseEventHandler;\n  helper?: string;\n  icon: ReactNode;\n}\n\nconst IconButon: React.FC<Props> = ({ icon, onClick, helper }) => {\n  return (\n    <Wrapper>\n      <Btn onClick={onClick}>{icon}</Btn>\n      {helper && <Tooltip>{helper}</Tooltip>}\n    </Wrapper>\n  );\n};\n\nexport default IconButon;\n","import { TiMediaStopOutline, TiInputCheckedOutline } from 'react-icons/ti';\nimport styled from 'styled-components';\nimport { tint, shade } from 'polished';\n\nimport { Theme } from 'components/styled';\n\ninterface Props {\n  status: Boolean;\n  theme: Theme;\n}\n\nexport const Wrapper = styled.li`\n  border-top: 1px solid ${({ theme }) => theme.colors.grey};\n  justify-content: flex-start;\n  align-items: center;\n  flex-direction: row;\n  display: flex;\n`;\n\nexport const CheckIcon = styled(TiMediaStopOutline)`\n  color: ${({ theme }) => {\n    const callback = theme.title === 'light' ? tint : shade;\n    return callback(0.4, theme.colors.info);\n  }};\n  font-size: 2rem;\n`;\n\nexport const UncheckIcon = styled(TiInputCheckedOutline)`\n  font-size: 2rem;\n`;\n\nexport const Button = styled.button`\n  color: ${({ theme }) => theme.colors.info};\n  background-color: transparent;\n  justify-content: center;\n  margin-right: 0.75rem;\n  align-items: center;\n  display: flex;\n  outline: none;\n  border: none;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const Text = styled.p`\n  text-decoration: ${(props: Props) =>\n    props.status ? 'line-through' : 'none'};\n\n  color: ${(props: Props) => {\n    const { theme, status } = props;\n    const color = theme.colors.text.default;\n    const callback = theme.title === 'light' ? tint : shade;\n    return status ? callback(0.6, color) : color;\n  }};\n  margin-right: 1rem;\n  font-weight: 300;\n  flex: 1;\n`;\n","import React from 'react';\n\nimport { TiDelete } from 'react-icons/ti';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  UncheckIcon,\n  CheckIcon,\n  Wrapper,\n  Button,\n  Text,\n} from 'components/atoms/item/styled';\n\nimport { Creators } from 'store/todos';\n\ninterface Props {\n  status: Boolean;\n  text: string;\n  id: number;\n}\n\nconst Item: React.FC<Props> = ({ status, text, id }) => {\n  const Icon = status ? UncheckIcon : CheckIcon;\n\n  const dispatcher = useDispatch();\n  const handle = (task: number) => dispatcher(Creators.toggleTodo(task));\n  const remove = (task: number) => dispatcher(Creators.removeTodo(task));\n\n  return (\n    <Wrapper>\n      <Button onClick={() => handle(id)}>\n        <Icon />\n      </Button>\n      <Text status={status}>{text}</Text>\n      <Button onClick={() => remove(id)}>\n        <TiDelete size=\"1rem\" />\n      </Button>\n    </Wrapper>\n  );\n};\n\nexport default Item;\n","import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  list-style-type: none;\n  overflow-y: scroll;\n  max-height: 35vh;\n\n  @media only screen and (max-width: 768px) {\n    & {\n      max-height: 55vh;\n    }\n  }\n\n  &::-webkit-scrollbar {\n    background-color: transparent;\n    width: 0.15rem;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${({ theme }) => theme.colors.info};\n    border-radius: 0.25rem;\n  }\n\n  &::-webkit-scrollbar-track {\n    border-radius: 0.25rem;\n  }\n`;\n","import React from 'react';\n\nimport Item from 'components/atoms/item';\nimport { Task } from 'store/todos';\n\nimport { Ul } from 'components/molecules/list/styled';\n\ninterface Props {\n  items: Task[];\n}\n\nconst List: React.FC<Props> = ({ items }) => {\n  const hasItems = Boolean(items.length);\n  return (\n    <>\n      {hasItems && (\n        <Ul>\n          {items.map((item: Task) => (\n            <Item\n              key={item.id}\n              text={item.text}\n              status={item.complete}\n              id={item.id}\n            />\n          ))}\n        </Ul>\n      )}\n    </>\n  );\n};\n\nexport default List;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  justify-content: flex-start;\n  flex-direction: column;\n  align-items: stretch;\n  display: flex;\n  height: 100%;\n  width: 100%;\n`;\n","import React from 'react';\n\nimport { Wrapper } from 'components/templates/columns/styled';\n\nconst Columns: React.FC = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n\nexport default Columns;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background-color: ${({ theme }) => theme.colors.secondary};\n  box-shadow: ${({ theme }) => theme.shadow.basic};\n  border-radius: 0.25rem;\n  width: max-content;\n  max-width: 35vw;\n\n  @media only screen and (max-width: 768px) {\n    & {\n      width: max-content;\n      max-width: 80vw;\n    }\n  }\n`;\n\nexport const Header = styled.div`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.info};\n  padding: 1rem 2rem;\n`;\n\nexport const Title = styled.h1`\n  color: ${({ theme }) => theme.colors.text.default};\n  font-weight: lighter;\n  padding: 0.5rem 0rem;\n  text-align: center;\n`;\n\nexport const Content = styled.div``;\n\nexport const Action = styled.div`\n  transform: translateY(50%);\n  justify-content: center;\n  margin-top: calc(-10%);\n  display: flex;\n`;\n\nexport const Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => theme.colors.info};\n`;\n","import React, { ReactNode } from 'react';\n\nimport Columns from 'components/templates/columns';\n\nimport {\n  Wrapper,\n  Content,\n  Action,\n  Footer,\n  Header,\n  Title,\n} from 'components/molecules/card/styled';\n\ninterface Props {\n  header?: ReactNode;\n  action?: ReactNode;\n  footer?: ReactNode;\n  title?: string;\n}\n\nconst Card: React.FC<Props> = ({ header, action, title, footer, children }) => {\n  return (\n    <Wrapper>\n      <Columns>\n        {header && <Header>{header}</Header>}\n        <Content>\n          {title && <Title>{title}</Title>}\n          {children}\n        </Content>\n        {footer && <Footer>{footer}</Footer>}\n      </Columns>\n      {action && <Action>{action}</Action>}\n    </Wrapper>\n  );\n};\n\nexport default Card;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div``;\n\nexport const Text = styled.p`\n  color: ${({ theme }) => theme.colors.danger};\n  text-align: center;\n`;\n","import React from 'react';\n\nimport { Wrapper, Text } from 'components/atoms/date/styled';\n\nconst Moment: React.FC = () => {\n  const formatter = new Intl.DateTimeFormat('pt-BR', {\n    weekday: 'long',\n    day: '2-digit',\n    month: 'long',\n    year: 'numeric',\n  });\n  const now: Date = new Date();\n  const data = formatter.format(now);\n  const info = data.charAt(0).toUpperCase() + data.slice(1);\n\n  return (\n    <Wrapper>\n      <Text>{info}</Text>\n    </Wrapper>\n  );\n};\n\nexport default Moment;\n","import { GoPlus } from 'react-icons/go';\nimport styled from 'styled-components';\n\nexport const Plus = styled(GoPlus).attrs({\n  size: '.75rem',\n})`\n  color: ${({ theme }) => theme.colors.secondary};\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Form, { formRef } from 'components/atoms/form';\nimport IconButton from 'components/atoms/iconButton';\nimport List from 'components/molecules/list';\nimport Card from 'components/molecules/card';\nimport Date from 'components/atoms/date';\nimport { Task } from 'store/todos';\nimport { State } from 'store';\n\nimport { Plus } from 'components/organisms/taskList/styled';\n\nconst TaskList: React.FC = () => {\n  const todos: Task[] = useSelector<State, Task[]>((data) => data.todos);\n\n  const handler = () => {\n    const event = new Event('submit');\n    formRef.current!.dispatchEvent(event);\n  };\n\n  const action = (\n    <IconButton helper=\"Nova tarefa\" onClick={handler} icon={<Plus />} />\n  );\n\n  return (\n    <Card\n      title=\"Minhas tarefas\"\n      header={<Date />}\n      action={action}\n      footer={<Form />}\n    >\n      <List items={todos} />\n    </Card>\n  );\n};\n\nexport default TaskList;\n","import styled from 'styled-components';\n\nimport { FaLightbulb } from 'react-icons/fa';\n\nexport const Wrapper = styled.div`\n  background-color: ${({ theme }) => theme.colors[theme.title]};\n  height: 100vh;\n  width: 100vw;\n`;\n\nexport const Fab = styled.div`\n  position: absolute;\n  z-index: 100;\n  bottom: 1rem;\n  right: 1rem;\n`;\n\nexport const Light = styled(FaLightbulb).attrs({\n  size: '1.5rem',\n})`\n  color: ${({ theme }) => theme.colors.secondary};\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport Centered from 'components/templates/centered';\nimport TaskList from 'components/organisms/taskList';\nimport IconButon from 'components/atoms/iconButton';\nimport { Creators } from 'store/theme';\n\nimport { Wrapper, Fab, Light } from 'components/pages/home/styled';\n\nconst Home: React.FC = () => {\n  const dispatcher = useDispatch();\n  return (\n    <Wrapper>\n      <Centered>\n        <TaskList />\n      </Centered>\n      <Fab>\n        <IconButon\n          onClick={() => dispatcher(Creators.toogleTheme())}\n          icon={<Light />}\n        />\n      </Fab>\n    </Wrapper>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\n\nimport { themes } from 'components/styled';\nimport Home from 'components/pages/home';\nimport { State } from 'store';\n\nconst App: React.FC = () => {\n  const theme: string = useSelector<State, string>((data) => data.theme);\n  const change = theme === 'light' ? themes.dark : themes.light;\n\n  return (\n    <ThemeProvider theme={change}>\n      <Home />\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport { Global } from 'components/styled';\nimport store, { persistor } from 'store';\nimport App from 'components';\n\nconst element = (\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <Global />\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>\n);\n\nReactDOM.render(element, document.getElementById('root'));\n"],"sourceRoot":""}